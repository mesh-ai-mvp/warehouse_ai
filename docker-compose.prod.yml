version: '3.8'

services:
  warehouse-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DEBIAN_FRONTEND: noninteractive
        UV_NO_CACHE: 1
    image: warehouse-management:latest
    container_name: warehouse-management-prod
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - WORKERS=2  # Increased workers for production
      - PYTHONOPTIMIZE=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data:/app/data:ro
      - logs:/app/logs
      - ./config:/app/config:ro
    restart: always
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/filters', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - warehouse-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:size=100M,noexec,nosuid,nodev
      - /app/tmp:size=50M,noexec,nosuid,nodev
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: warehouse-frontend:latest
    container_name: warehouse-frontend-prod
    ports:
      - "3000:80"
    depends_on:
      - warehouse-app
    networks:
      - warehouse-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Optional: Add nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: warehouse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - warehouse-app
      - frontend
    networks:
      - warehouse-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
    profiles:
      - with-nginx

networks:
  warehouse-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

volumes:
  logs:
    driver: local